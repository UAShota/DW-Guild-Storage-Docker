"""
Storage actions
"""
import random

from .command_custom import DwgbCmdCustom, DwgbCmdConst
from ..classes import DwgbDatabase, DwgbTransport, DwgbMessage


class DwgbCmdStorage(DwgbCmdCustom):
    """ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ """

    def __init__(self, database: DwgbDatabase, transport: DwgbTransport):
        """ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä """
        super().__init__(database, transport)
        self.regView = self.getRegex(r"^(?:\[.+?\]|—Ö–æ—á—É) (—Å–∫–ª–∞–¥|üçÑ|üìï|üìò|üõí)$")
        self.regBuy = self.getRegex(r"^(?:\[.+?\]|—Ö–æ—á—É) —Ü–µ–Ω—ã$")

    def work(self, message: DwgbMessage):
        """ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏—è """
        # –û–±–∑–æ—Ä
        tmp_data = self.regView.match(message.text)
        if tmp_data:
            return self.getView(message, tmp_data)
        # –ù–µ–¥–æ—Å—Ç–∞—á–∞
        tmp_data = self.regBuy.match(message.text)
        if tmp_data:
            return self.getBuy(message)
        return False

    def getView(self, message: DwgbMessage, match: dict):
        """ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞ """
        tmp_type = match[1]
        tmp_need_scrolls = False
        # –°–∫–∏–¥–∫–∏
        if DwgbCmdConst.PERCENT_SELL <= 0.80:
            tmp_data = "üí• –ß–µ—Ä–Ω–∞—è –ø—è—Ç–Ω–∏—Ü–∞! –°–∫–∏–¥–∫–∏ %s%%! üí•\n" % int(DwgbCmdConst.PERCENT_SELL * 100)
        else:
            tmp_data = ""
        # –ü–µ—Ä–µ–±–µ—Ä–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
        for tmp_item, tmp_storage in DwgbCmdConst.STORE_DATA.items():
            if not tmp_storage.count and not tmp_storage.valueex:
                continue
            # –ï—Å–ª–∏ –Ω—É–∂–µ–Ω —Å–∫–ª–∞–¥ - –Ω–µ —Ñ–∏–ª—å—Ç—Ä—É–µ–º
            if (tmp_type != "—Å–∫–ª–∞–¥") and (tmp_type != "üì¶"):
                if tmp_type == "üçÑ":
                    if tmp_storage.icon != "üå≥" and tmp_storage.icon != tmp_type:
                        continue
                elif tmp_type == "üìï":
                    if tmp_storage.icon != "üìï" and tmp_storage.icon != "üìò":
                        continue
                elif tmp_type == "üõí":
                    if tmp_storage.icon == "üçÑ" or tmp_storage.icon == "üìï" or tmp_storage.icon == "üìò" or tmp_storage.icon == "üå≥":
                        continue
            # –û–ø—Ä–µ–¥–µ–ª–∏–º –∫–æ—Ä–æ—Ç–∫–æ–µ –∏–º—è
            if tmp_storage.short:
                tmp_short = "(" + tmp_storage.short + ")"
            else:
                tmp_short = ""
            # –î–æ–ø–æ–ª–Ω–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            if tmp_storage.icon == "üìï" or tmp_storage.icon == "üìò":
                if tmp_storage.count > 0:
                    tmpCount = "%s+%s" % (tmp_storage.valueex, tmp_storage.count)
                else:
                    tmpCount = tmp_storage.valueex
            else:
                tmpCount = tmp_storage.count
            # –û–ø—Ä–µ–¥–µ–ª–∏–º –ø–µ—Ä–µ–ª–∏–º–∏—Ç
            if tmp_storage.id != self._ITEM_GOLD and tmp_storage.count > tmp_storage.limit + 3:
                tmpLimit = " ‚ùó"
            else:
                tmpLimit = ""
            # –°–≤–∏—Ç–∫–∏
            if tmp_storage.icon == "üìú" and tmp_storage.count < 1000:
                tmp_need_scrolls = True
            # –ë–µ–∑ —Ü–µ–Ω—ã —Ç–æ–ª—å–∫–æ –∞—Ä–µ–Ω–¥–∞
            if tmp_storage.cost > 0:
                tmp_data += "%s%s: %s –ø–æ %s %s %s\n" % (tmp_storage.icon, tmp_storage.id.capitalize(), tmpCount, self.getCostOut(tmp_storage.cost), tmp_short, tmpLimit)
            else:
                tmp_data += "%s%s: %s %s –∞—Ä–µ–Ω–¥–∞ %s\n" % (tmp_storage.icon, tmp_storage.id.capitalize(), tmpCount, tmp_short, tmpLimit)
        # –û—Ç–ø—Ä–∞–≤–∏–º
        self.transport.writeChannel("üì¶–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å: %s –∏–∑ %s\n" % (DwgbCmdConst.STORE_SIZE - DwgbCmdConst.STORE_FREE, DwgbCmdConst.STORE_SIZE) + tmp_data, message, False, 360)
        # –ë–æ–Ω—É—Å
        if random.randint(1, 100) == 50:
            self.setBonus(message)
        # –°–≤–∏—Ç–∫–∏
        if tmp_need_scrolls:
            message.channel = self._GAME_BOT_ID
            self.transport.writeChannel("100 —Å—Ç—Ä–∞–Ω–∏—Ü (300 –∑–æ–ª–æ—Ç–∞)", message, False)
        # –í–µ—Ä–Ω–µ–º
        return True

    def getBuy(self, message: DwgbMessage):
        """ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–∫—É–ø–æ–∫ """
        tmp_data = "üì¶–ü—Ä–æ–¥–∞–∂–∞ –Ω–∞ —Å–∫–ª–∞–¥ %s%%, –ø–æ–∫—É–ø–∫–∞ - %s%%\n" % (DwgbCmdConst.PERCENT_BUY, DwgbCmdConst.PERCENT_SELL)
        # –ü–µ—Ä–µ–±–µ—Ä–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
        for tmpItem, tmp_storage in DwgbCmdConst.STORE_DATA.items():
            tmp_data += "%s%s: %s üéö%s/%s/%s\n" % (tmp_storage.icon, tmp_storage.id.capitalize()[:15], tmp_storage.cost, tmp_storage.trade, tmp_storage.limit, tmp_storage.date.strftime("%m.%d"))
        # –û—Ç–ø—Ä–∞–≤–∏–º
        self.transport.writeChannel(tmp_data, message, False, 360)
        return True
